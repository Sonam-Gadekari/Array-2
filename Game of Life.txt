//Time Complexity: O(m*n)
//Space Complexity: O(1)
//Approach:  Count the number of live cells in all 8 directions. If the count >3 and <2 cell will die, if count is exactly 3 they cell comes live.
//In all other cases cell would remain same. Keep track on old cells that were dead and that were alive.
class Solution {
    public void gameOfLife(int[][] board) {
        for(int i=0;i<board.length;i++){
          for(int j=0;j<board[0].length;j++){
                int count= countLiveCells(board, i, j);
                if(board[i][j]==0){
                    if(count==3){
                        board[i][j]=3;
                    }
                }                  
                else if(board[i][j]==1){
                    if(count>3 || count<2){
                        board[i][j]=2;
                    }
                }                
          }  
        }
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]==3) board[i][j]=1;
                if(board[i][j]==2) board[i][j]=0;
            }
        }
    }

    public int countLiveCells(int[][] board, int i, int j){
        int count=0;
        int[][] dirs=new int[][]{{0,-1},{0,1},{1,0},{-1,0},{1,-1},{-1,1},{-1,-1},{1,1}};
        for(int[] dir: dirs){
             int row=i+dir[0];
             int column=j+dir[1];
            if(row>=0 && column>=0 && row<board.length && column<board[0].length){
                if(board[row][column]==1 || board[row][column]==2){
                    count=count+1;
                }
            }
        }
        return count;
    }
}