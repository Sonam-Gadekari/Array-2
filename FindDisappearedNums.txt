//Time Complexity: O(n)
//Space: O(1)
//Approach: Mark the presence of number 1 to index 0 , number 2 to index 1, number 3 to index 2 and so on.
We are using the same array to mark presence of a number. Any index that is non negative has a missing elemnt in array.
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
    
     List<Integer> result= new ArrayList<Integer>();
     for(int i=0;i<nums.length;i++) {
        int temp=nums[i];
        if(temp<0){
            temp=temp*-1;
        }
        if(nums[temp-1]>0){
            nums[temp-1]*=-1;
        }
     }
       for(int i=0;i<nums.length;i++){
        if(nums[i]>0){
            result.add(i+1);
        }
       }

        return result;     
    }
}